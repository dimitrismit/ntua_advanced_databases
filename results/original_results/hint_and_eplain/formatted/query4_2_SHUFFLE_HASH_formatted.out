query4_2.py
----------------------------------------------------------------------------------------------------
Spark session started for query4_2_SHUFFLE_HASH !
----------------------------------------------------------------------------------------------------
== Physical Plan ==
AdaptiveSparkPlan (7)
+- BroadcastNestedLoopJoin Cross BuildRight (6)
   :- Project (3)
   :  +- Filter (2)
   :     +- Scan csv  (1)
   +- BroadcastExchange (5)
      +- Scan csv  (4)


(1) Scan csv 
Output [28]: [DR_NO#17, Date Rptd#18, DATE OCC#19, TIME OCC#20, AREA#21, AREA NAME#22, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44]
Batched: false
Location: InMemoryFileIndex [hdfs://okeanos-master:54310/project_data/Crime_Data_from_2010_to_Present.csv]
PushedFilters: [IsNotNull(LAT), IsNotNull(LON), IsNotNull(Weapon Used Cd), Not(EqualTo(LAT,0.0)), Not(EqualTo(LON,0.0))]
ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA:int,AREA NAME:string,Rpt Dist No:int,Part 1-2:int,Crm Cd:int,Crm Cd Desc:string,Mocodes:string,Vict Age:int,Vict Sex:string,Vict Descent:string,Premis Cd:int,Premis Desc:string,Weapon Used Cd:int,Weapon Desc:string,Status:string,Status Desc:string,Crm Cd 1:int,Crm Cd 2:int,Crm Cd 3:int,Crm Cd 4:int,LOCATION:string,Cross Street:string,LAT:double,LON:double>

(2) Filter
Input [28]: [DR_NO#17, Date Rptd#18, DATE OCC#19, TIME OCC#20, AREA#21, AREA NAME#22, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44]
Condition : (((((isnotnull(LAT#43) AND isnotnull(LON#44)) AND isnotnull(Weapon Used Cd#33)) AND NOT (LAT#43 = 0.0)) AND NOT (LON#44 = 0.0)) AND StartsWith(cast(Weapon Used Cd#33 as string), 1))

(3) Project
Output [28]: [DR_NO#17, Date Rptd#18, gettimestamp(DATE OCC#19, MM/dd/yyyy hh:mm:ss a, TimestampType, Some(Europe/Athens), false) AS DATE OCC#74, TIME OCC#20, AREA#21, CASE WHEN (AREA NAME#22 = N Hollywood) THEN NORTH HOLLYWOOD WHEN (AREA NAME#22 = West LA) THEN WEST LOS ANGELES ELSE upper(AREA NAME#22) END AS AREA NAME#132, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44]
Input [28]: [DR_NO#17, Date Rptd#18, DATE OCC#19, TIME OCC#20, AREA#21, AREA NAME#22, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44]

(4) Scan csv 
Output [3]: [X#178, Y#179, DIVISION#181]
Batched: false
Location: InMemoryFileIndex [hdfs://okeanos-master:54310/project_data/LAPD_Police_Stations.csv]
ReadSchema: struct<X:double,Y:double,DIVISION:string>

(5) BroadcastExchange
Input [3]: [X#178, Y#179, DIVISION#181]
Arguments: IdentityBroadcastMode, [plan_id=54]

(6) BroadcastNestedLoopJoin
Join type: Cross
Join condition: None

(7) AdaptiveSparkPlan
Output [31]: [DR_NO#17, Date Rptd#18, DATE OCC#74, TIME OCC#20, AREA#21, AREA NAME#132, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44, X#178, Y#179, DIVISION#181]
Arguments: isFinalPlan=false


== Physical Plan ==
AdaptiveSparkPlan (23)
+- Project (22)
   +- ShuffledHashJoin LeftOuter BuildRight (21)
      :- Exchange (4)
      :  +- Project (3)
      :     +- Filter (2)
      :        +- Scan csv  (1)
      +- Project (20)
         +- Filter (19)
            +- Window (18)
               +- WindowGroupLimit (17)
                  +- Sort (16)
                     +- Exchange (15)
                        +- WindowGroupLimit (14)
                           +- Sort (13)
                              +- Project (12)
                                 +- BatchEvalPython (11)
                                    +- BroadcastNestedLoopJoin Cross BuildRight (10)
                                       :- Project (7)
                                       :  +- Filter (6)
                                       :     +- Scan csv  (5)
                                       +- BroadcastExchange (9)
                                          +- Scan csv  (8)


(1) Scan csv 
Output [28]: [DR_NO#17, Date Rptd#18, DATE OCC#19, TIME OCC#20, AREA#21, AREA NAME#22, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44]
Batched: false
Location: InMemoryFileIndex [hdfs://okeanos-master:54310/project_data/Crime_Data_from_2010_to_Present.csv]
PushedFilters: [IsNotNull(LAT), IsNotNull(LON), IsNotNull(Weapon Used Cd), Not(EqualTo(LAT,0.0)), Not(EqualTo(LON,0.0))]
ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA:int,AREA NAME:string,Rpt Dist No:int,Part 1-2:int,Crm Cd:int,Crm Cd Desc:string,Mocodes:string,Vict Age:int,Vict Sex:string,Vict Descent:string,Premis Cd:int,Premis Desc:string,Weapon Used Cd:int,Weapon Desc:string,Status:string,Status Desc:string,Crm Cd 1:int,Crm Cd 2:int,Crm Cd 3:int,Crm Cd 4:int,LOCATION:string,Cross Street:string,LAT:double,LON:double>

(2) Filter
Input [28]: [DR_NO#17, Date Rptd#18, DATE OCC#19, TIME OCC#20, AREA#21, AREA NAME#22, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44]
Condition : (((((isnotnull(LAT#43) AND isnotnull(LON#44)) AND isnotnull(Weapon Used Cd#33)) AND NOT (LAT#43 = 0.0)) AND NOT (LON#44 = 0.0)) AND StartsWith(cast(Weapon Used Cd#33 as string), 1))

(3) Project
Output [28]: [DR_NO#17, Date Rptd#18, gettimestamp(DATE OCC#19, MM/dd/yyyy hh:mm:ss a, TimestampType, Some(Europe/Athens), false) AS DATE OCC#74, TIME OCC#20, AREA#21, CASE WHEN (AREA NAME#22 = N Hollywood) THEN NORTH HOLLYWOOD WHEN (AREA NAME#22 = West LA) THEN WEST LOS ANGELES ELSE upper(AREA NAME#22) END AS AREA NAME#132, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44]
Input [28]: [DR_NO#17, Date Rptd#18, DATE OCC#19, TIME OCC#20, AREA#21, AREA NAME#22, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44]

(4) Exchange
Input [28]: [DR_NO#17, Date Rptd#18, DATE OCC#74, TIME OCC#20, AREA#21, AREA NAME#132, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44]
Arguments: hashpartitioning(DR_NO#17, 200), ENSURE_REQUIREMENTS, [plan_id=131]

(5) Scan csv 
Output [4]: [DR_NO#297, Weapon Used Cd#313, LAT#323, LON#324]
Batched: false
Location: InMemoryFileIndex [hdfs://okeanos-master:54310/project_data/Crime_Data_from_2010_to_Present.csv]
PushedFilters: [IsNotNull(LAT), IsNotNull(LON), IsNotNull(Weapon Used Cd), Not(EqualTo(LAT,0.0)), Not(EqualTo(LON,0.0)), IsNotNull(DR_NO)]
ReadSchema: struct<DR_NO:int,Weapon Used Cd:int,LAT:double,LON:double>

(6) Filter
Input [4]: [DR_NO#297, Weapon Used Cd#313, LAT#323, LON#324]
Condition : ((((((isnotnull(LAT#323) AND isnotnull(LON#324)) AND isnotnull(Weapon Used Cd#313)) AND NOT (LAT#323 = 0.0)) AND NOT (LON#324 = 0.0)) AND StartsWith(cast(Weapon Used Cd#313 as string), 1)) AND isnotnull(DR_NO#297))

(7) Project
Output [3]: [DR_NO#297, LAT#323, LON#324]
Input [4]: [DR_NO#297, Weapon Used Cd#313, LAT#323, LON#324]

(8) Scan csv 
Output [3]: [X#178, Y#179, DIVISION#181]
Batched: false
Location: InMemoryFileIndex [hdfs://okeanos-master:54310/project_data/LAPD_Police_Stations.csv]
ReadSchema: struct<X:double,Y:double,DIVISION:string>

(9) BroadcastExchange
Input [3]: [X#178, Y#179, DIVISION#181]
Arguments: IdentityBroadcastMode, [plan_id=115]

(10) BroadcastNestedLoopJoin
Join type: Cross
Join condition: None

(11) BatchEvalPython
Input [6]: [DR_NO#297, LAT#323, LON#324, X#178, Y#179, DIVISION#181]
Arguments: [get_distance(LAT#323, LON#324, Y#179, X#178)#225], [pythonUDF0#356]

(12) Project
Output [3]: [DR_NO#297, DIVISION#181, pythonUDF0#356 AS distance#226]
Input [7]: [DR_NO#297, LAT#323, LON#324, X#178, Y#179, DIVISION#181, pythonUDF0#356]

(13) Sort
Input [3]: [DR_NO#297, DIVISION#181, distance#226]
Arguments: [DR_NO#297 ASC NULLS FIRST, distance#226 ASC NULLS FIRST], false, 0

(14) WindowGroupLimit
Input [3]: [DR_NO#297, DIVISION#181, distance#226]
Arguments: [DR_NO#297], [distance#226 ASC NULLS FIRST], row_number(), 1, Partial

(15) Exchange
Input [3]: [DR_NO#297, DIVISION#181, distance#226]
Arguments: hashpartitioning(DR_NO#297, 200), ENSURE_REQUIREMENTS, [plan_id=123]

(16) Sort
Input [3]: [DR_NO#297, DIVISION#181, distance#226]
Arguments: [DR_NO#297 ASC NULLS FIRST, distance#226 ASC NULLS FIRST], false, 0

(17) WindowGroupLimit
Input [3]: [DR_NO#297, DIVISION#181, distance#226]
Arguments: [DR_NO#297], [distance#226 ASC NULLS FIRST], row_number(), 1, Final

(18) Window
Input [3]: [DR_NO#297, DIVISION#181, distance#226]
Arguments: [row_number() windowspecdefinition(DR_NO#297, distance#226 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank#260], [DR_NO#297], [distance#226 ASC NULLS FIRST]

(19) Filter
Input [4]: [DR_NO#297, DIVISION#181, distance#226, rank#260]
Condition : (rank#260 = 1)

(20) Project
Output [3]: [DR_NO#297, DIVISION#181, distance#226]
Input [4]: [DR_NO#297, DIVISION#181, distance#226, rank#260]

(21) ShuffledHashJoin
Left keys [1]: [DR_NO#17]
Right keys [1]: [DR_NO#297]
Join type: LeftOuter
Join condition: None

(22) Project
Output [30]: [DR_NO#17, Date Rptd#18, DATE OCC#74, TIME OCC#20, AREA#21, AREA NAME#132, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44, DIVISION#181, distance#226]
Input [31]: [DR_NO#17, Date Rptd#18, DATE OCC#74, TIME OCC#20, AREA#21, AREA NAME#132, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44, DR_NO#297, DIVISION#181, distance#226]

(23) AdaptiveSparkPlan
Output [30]: [DR_NO#17, Date Rptd#18, DATE OCC#74, TIME OCC#20, AREA#21, AREA NAME#132, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44, DIVISION#181, distance#226]
Arguments: isFinalPlan=false


+----+------------------+-----------+
|year|  average_distance|crime_count|
+----+------------------+-----------+
|2010|2.4342351310730472|       8212|
|2011|2.4610050784309894|       7232|
|2012|2.5055255743371405|       6532|
|2013|2.4555437568989573|       5838|
|2014|2.3879294419713784|       4526|
|2015|2.3872613200248227|       6763|
|2016|2.4281950357376467|       8100|
|2017|2.3916189327746245|       7786|
|2018| 2.408207973743856|       7413|
|2019|2.4294088109777414|       7129|
|2020| 2.383615837920023|       8487|
|2021| 2.406949935507565|      12324|
|2022|2.3120960052212864|      10025|
|2023| 2.265928523017916|       8896|
+----+------------------+-----------+

+---------------+------------------+-----------+
|       DIVISION|  average_distance|crime_count|
+---------------+------------------+-----------+
|    77TH STREET|1.7215559668317908|      13489|
|      SOUTHEAST|2.1955986195059682|      11816|
|      SOUTHWEST|2.2793433431334003|      11209|
|         NEWTON|1.5693029438285104|       7161|
|       WILSHIRE|2.4446505649478403|       6253|
|     HOLLENBECK| 2.636843036493325|       6174|
|        OLYMPIC|1.6654702507186874|       5415|
|      HOLLYWOOD|  2.00865591038643|       5378|
|         HARBOR| 3.898237935420455|       5322|
|        RAMPART|1.3978586849187002|       4700|
|       FOOTHILL|3.6003578272455194|       4693|
|       VAN NUYS| 2.973470126952909|       4673|
|        CENTRAL|1.0176983019996635|       3584|
|NORTH HOLLYWOOD|2.7455806429314507|       3389|
|      NORTHEAST| 3.755563871818787|       3096|
|        MISSION|3.8067591648144883|       2853|
|    WEST VALLEY|2.7933743074834974|       2755|
|        PACIFIC|3.7014554679410665|       2522|
|        TOPANGA| 3.051964450690067|       2435|
|     DEVONSHIRE|  2.98460272256774|       1332|
+---------------+------------------+-----------+
only showing top 20 rows

