query4_1.py
----------------------------------------------------------------------------------------------------
Spark session started for query4_1_MERGE !
----------------------------------------------------------------------------------------------------
== Physical Plan ==
AdaptiveSparkPlan (12)
+- Project (11)
   +- SortMergeJoin LeftOuter (10)
      :- Sort (5)
      :  +- Exchange (4)
      :     +- Project (3)
      :        +- Filter (2)
      :           +- Scan csv  (1)
      +- Sort (9)
         +- Exchange (8)
            +- Filter (7)
               +- Scan csv  (6)


(1) Scan csv 
Output [28]: [DR_NO#17, Date Rptd#18, DATE OCC#19, TIME OCC#20, AREA#21, AREA NAME#22, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44]
Batched: false
Location: InMemoryFileIndex [hdfs://okeanos-master:54310/project_data/Crime_Data_from_2010_to_Present.csv]
PushedFilters: [IsNotNull(LAT), IsNotNull(LON), IsNotNull(Weapon Used Cd), Not(EqualTo(LAT,0.0)), Not(EqualTo(LON,0.0))]
ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA:int,AREA NAME:string,Rpt Dist No:int,Part 1-2:int,Crm Cd:int,Crm Cd Desc:string,Mocodes:string,Vict Age:int,Vict Sex:string,Vict Descent:string,Premis Cd:int,Premis Desc:string,Weapon Used Cd:int,Weapon Desc:string,Status:string,Status Desc:string,Crm Cd 1:int,Crm Cd 2:int,Crm Cd 3:int,Crm Cd 4:int,LOCATION:string,Cross Street:string,LAT:double,LON:double>

(2) Filter
Input [28]: [DR_NO#17, Date Rptd#18, DATE OCC#19, TIME OCC#20, AREA#21, AREA NAME#22, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44]
Condition : (((((isnotnull(LAT#43) AND isnotnull(LON#44)) AND isnotnull(Weapon Used Cd#33)) AND NOT (LAT#43 = 0.0)) AND NOT (LON#44 = 0.0)) AND StartsWith(cast(Weapon Used Cd#33 as string), 1))

(3) Project
Output [28]: [DR_NO#17, Date Rptd#18, gettimestamp(DATE OCC#19, MM/dd/yyyy hh:mm:ss a, TimestampType, Some(Europe/Athens), false) AS DATE OCC#74, TIME OCC#20, AREA#21, CASE WHEN (AREA NAME#22 = N Hollywood) THEN NORTH HOLLYWOOD WHEN (AREA NAME#22 = West LA) THEN WEST LOS ANGELES ELSE upper(AREA NAME#22) END AS DIVISION#161, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44]
Input [28]: [DR_NO#17, Date Rptd#18, DATE OCC#19, TIME OCC#20, AREA#21, AREA NAME#22, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44]

(4) Exchange
Input [28]: [DR_NO#17, Date Rptd#18, DATE OCC#74, TIME OCC#20, AREA#21, DIVISION#161, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44]
Arguments: hashpartitioning(DIVISION#161, 200), ENSURE_REQUIREMENTS, [plan_id=65]

(5) Sort
Input [28]: [DR_NO#17, Date Rptd#18, DATE OCC#74, TIME OCC#20, AREA#21, DIVISION#161, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44]
Arguments: [DIVISION#161 ASC NULLS FIRST], false, 0

(6) Scan csv 
Output [3]: [X#207, Y#208, DIVISION#210]
Batched: false
Location: InMemoryFileIndex [hdfs://okeanos-master:54310/project_data/LAPD_Police_Stations.csv]
PushedFilters: [IsNotNull(DIVISION)]
ReadSchema: struct<X:double,Y:double,DIVISION:string>

(7) Filter
Input [3]: [X#207, Y#208, DIVISION#210]
Condition : isnotnull(DIVISION#210)

(8) Exchange
Input [3]: [X#207, Y#208, DIVISION#210]
Arguments: hashpartitioning(DIVISION#210, 200), ENSURE_REQUIREMENTS, [plan_id=66]

(9) Sort
Input [3]: [X#207, Y#208, DIVISION#210]
Arguments: [DIVISION#210 ASC NULLS FIRST], false, 0

(10) SortMergeJoin
Left keys [1]: [DIVISION#161]
Right keys [1]: [DIVISION#210]
Join type: LeftOuter
Join condition: None

(11) Project
Output [30]: [DIVISION#161, DR_NO#17, Date Rptd#18, DATE OCC#74, TIME OCC#20, AREA#21, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44, X#207, Y#208]
Input [31]: [DR_NO#17, Date Rptd#18, DATE OCC#74, TIME OCC#20, AREA#21, DIVISION#161, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44, X#207, Y#208, DIVISION#210]

(12) AdaptiveSparkPlan
Output [30]: [DIVISION#161, DR_NO#17, Date Rptd#18, DATE OCC#74, TIME OCC#20, AREA#21, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44, X#207, Y#208]
Arguments: isFinalPlan=false


Rows with big distances:
== Physical Plan ==
AdaptiveSparkPlan (26)
+- Project (25)
   +- SortMergeJoin LeftOuter (24)
      :- Sort (5)
      :  +- Exchange (4)
      :     +- Project (3)
      :        +- Filter (2)
      :           +- Scan csv  (1)
      +- SortAggregate (23)
         +- Sort (22)
            +- Exchange (21)
               +- SortAggregate (20)
                  +- Sort (19)
                     +- Project (18)
                        +- BatchEvalPython (17)
                           +- Project (16)
                              +- SortMergeJoin LeftOuter (15)
                                 :- Sort (10)
                                 :  +- Exchange (9)
                                 :     +- Project (8)
                                 :        +- Filter (7)
                                 :           +- Scan csv  (6)
                                 +- Sort (14)
                                    +- Exchange (13)
                                       +- Filter (12)
                                          +- Scan csv  (11)


(1) Scan csv 
Output [28]: [DR_NO#17, Date Rptd#18, DATE OCC#19, TIME OCC#20, AREA#21, AREA NAME#22, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44]
Batched: false
Location: InMemoryFileIndex [hdfs://okeanos-master:54310/project_data/Crime_Data_from_2010_to_Present.csv]
PushedFilters: [IsNotNull(LAT), IsNotNull(LON), IsNotNull(Weapon Used Cd), Not(EqualTo(LAT,0.0)), Not(EqualTo(LON,0.0))]
ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA:int,AREA NAME:string,Rpt Dist No:int,Part 1-2:int,Crm Cd:int,Crm Cd Desc:string,Mocodes:string,Vict Age:int,Vict Sex:string,Vict Descent:string,Premis Cd:int,Premis Desc:string,Weapon Used Cd:int,Weapon Desc:string,Status:string,Status Desc:string,Crm Cd 1:int,Crm Cd 2:int,Crm Cd 3:int,Crm Cd 4:int,LOCATION:string,Cross Street:string,LAT:double,LON:double>

(2) Filter
Input [28]: [DR_NO#17, Date Rptd#18, DATE OCC#19, TIME OCC#20, AREA#21, AREA NAME#22, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44]
Condition : (((((isnotnull(LAT#43) AND isnotnull(LON#44)) AND isnotnull(Weapon Used Cd#33)) AND NOT (LAT#43 = 0.0)) AND NOT (LON#44 = 0.0)) AND StartsWith(cast(Weapon Used Cd#33 as string), 1))

(3) Project
Output [28]: [DR_NO#17, Date Rptd#18, gettimestamp(DATE OCC#19, MM/dd/yyyy hh:mm:ss a, TimestampType, Some(Europe/Athens), false) AS DATE OCC#74, TIME OCC#20, AREA#21, CASE WHEN (AREA NAME#22 = N Hollywood) THEN NORTH HOLLYWOOD WHEN (AREA NAME#22 = West LA) THEN WEST LOS ANGELES ELSE upper(AREA NAME#22) END AS DIVISION#161, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44]
Input [28]: [DR_NO#17, Date Rptd#18, DATE OCC#19, TIME OCC#20, AREA#21, AREA NAME#22, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44]

(4) Exchange
Input [28]: [DR_NO#17, Date Rptd#18, DATE OCC#74, TIME OCC#20, AREA#21, DIVISION#161, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44]
Arguments: hashpartitioning(DR_NO#17, 200), ENSURE_REQUIREMENTS, [plan_id=152]

(5) Sort
Input [28]: [DR_NO#17, Date Rptd#18, DATE OCC#74, TIME OCC#20, AREA#21, DIVISION#161, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44]
Arguments: [DR_NO#17 ASC NULLS FIRST], false, 0

(6) Scan csv 
Output [5]: [DR_NO#324, AREA NAME#329, Weapon Used Cd#340, LAT#350, LON#351]
Batched: false
Location: InMemoryFileIndex [hdfs://okeanos-master:54310/project_data/Crime_Data_from_2010_to_Present.csv]
PushedFilters: [IsNotNull(LAT), IsNotNull(LON), IsNotNull(Weapon Used Cd), Not(EqualTo(LAT,0.0)), Not(EqualTo(LON,0.0)), IsNotNull(DR_NO)]
ReadSchema: struct<DR_NO:int,AREA NAME:string,Weapon Used Cd:int,LAT:double,LON:double>

(7) Filter
Input [5]: [DR_NO#324, AREA NAME#329, Weapon Used Cd#340, LAT#350, LON#351]
Condition : ((((((isnotnull(LAT#350) AND isnotnull(LON#351)) AND isnotnull(Weapon Used Cd#340)) AND NOT (LAT#350 = 0.0)) AND NOT (LON#351 = 0.0)) AND StartsWith(cast(Weapon Used Cd#340 as string), 1)) AND isnotnull(DR_NO#324))

(8) Project
Output [4]: [DR_NO#324, CASE WHEN (AREA NAME#329 = N Hollywood) THEN NORTH HOLLYWOOD WHEN (AREA NAME#329 = West LA) THEN WEST LOS ANGELES ELSE upper(AREA NAME#329) END AS DIVISION#161, LAT#350, LON#351]
Input [5]: [DR_NO#324, AREA NAME#329, Weapon Used Cd#340, LAT#350, LON#351]

(9) Exchange
Input [4]: [DR_NO#324, DIVISION#161, LAT#350, LON#351]
Arguments: hashpartitioning(DIVISION#161, 200), ENSURE_REQUIREMENTS, [plan_id=135]

(10) Sort
Input [4]: [DR_NO#324, DIVISION#161, LAT#350, LON#351]
Arguments: [DIVISION#161 ASC NULLS FIRST], false, 0

(11) Scan csv 
Output [3]: [X#207, Y#208, DIVISION#210]
Batched: false
Location: InMemoryFileIndex [hdfs://okeanos-master:54310/project_data/LAPD_Police_Stations.csv]
PushedFilters: [IsNotNull(DIVISION)]
ReadSchema: struct<X:double,Y:double,DIVISION:string>

(12) Filter
Input [3]: [X#207, Y#208, DIVISION#210]
Condition : isnotnull(DIVISION#210)

(13) Exchange
Input [3]: [X#207, Y#208, DIVISION#210]
Arguments: hashpartitioning(DIVISION#210, 200), ENSURE_REQUIREMENTS, [plan_id=136]

(14) Sort
Input [3]: [X#207, Y#208, DIVISION#210]
Arguments: [DIVISION#210 ASC NULLS FIRST], false, 0

(15) SortMergeJoin
Left keys [1]: [DIVISION#161]
Right keys [1]: [DIVISION#210]
Join type: LeftOuter
Join condition: None

(16) Project
Output [6]: [DR_NO#324, DIVISION#161, LAT#350, LON#351, X#207, Y#208]
Input [7]: [DR_NO#324, DIVISION#161, LAT#350, LON#351, X#207, Y#208, DIVISION#210]

(17) BatchEvalPython
Input [6]: [DR_NO#324, DIVISION#161, LAT#350, LON#351, X#207, Y#208]
Arguments: [get_distance(LAT#350, LON#351, Y#208, X#207)#253], [pythonUDF0#383]

(18) Project
Output [3]: [DIVISION#161, DR_NO#324, pythonUDF0#383 AS distance#254]
Input [7]: [DR_NO#324, DIVISION#161, LAT#350, LON#351, X#207, Y#208, pythonUDF0#383]

(19) Sort
Input [3]: [DIVISION#161, DR_NO#324, distance#254]
Arguments: [DR_NO#324 ASC NULLS FIRST], false, 0

(20) SortAggregate
Input [3]: [DIVISION#161, DR_NO#324, distance#254]
Keys [1]: [DR_NO#324]
Functions [2]: [partial_min(distance#254), partial_first(DIVISION#161, false)]
Aggregate Attributes [3]: [min#384, first#385, valueSet#386]
Results [4]: [DR_NO#324, min#387, first#388, valueSet#389]

(21) Exchange
Input [4]: [DR_NO#324, min#387, first#388, valueSet#389]
Arguments: hashpartitioning(DR_NO#324, 200), ENSURE_REQUIREMENTS, [plan_id=147]

(22) Sort
Input [4]: [DR_NO#324, min#387, first#388, valueSet#389]
Arguments: [DR_NO#324 ASC NULLS FIRST], false, 0

(23) SortAggregate
Input [4]: [DR_NO#324, min#387, first#388, valueSet#389]
Keys [1]: [DR_NO#324]
Functions [2]: [min(distance#254), first(DIVISION#161, false)]
Aggregate Attributes [2]: [min(distance#254)#317, first(DIVISION#161)()#319]
Results [3]: [DR_NO#324, min(distance#254)#317 AS min_distance#318, first(DIVISION#161)()#319 AS nearest_place#320]

(24) SortMergeJoin
Left keys [1]: [DR_NO#17]
Right keys [1]: [DR_NO#324]
Join type: LeftOuter
Join condition: None

(25) Project
Output [30]: [DR_NO#17, Date Rptd#18, DATE OCC#74, TIME OCC#20, AREA#21, DIVISION#161, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44, min_distance#318, nearest_place#320]
Input [31]: [DR_NO#17, Date Rptd#18, DATE OCC#74, TIME OCC#20, AREA#21, DIVISION#161, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44, DR_NO#324, min_distance#318, nearest_place#320]

(26) AdaptiveSparkPlan
Output [30]: [DR_NO#17, Date Rptd#18, DATE OCC#74, TIME OCC#20, AREA#21, DIVISION#161, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, LOCATION#41, Cross Street#42, LAT#43, LON#44, min_distance#318, nearest_place#320]
Arguments: isFinalPlan=false


+----+------------------+-----------+
|year|  average_distance|crime_count|
+----+------------------+-----------+
|2010|2.7832234206124835|       8212|
|2011| 2.792627779940279|       7232|
|2012|2.8357548486545574|       6532|
|2013|2.8261324953140776|       5838|
|2014|2.7728985164775213|       4526|
|2015| 2.705813477317789|       6763|
|2016|2.7171266994834515|       8100|
|2017|2.7239561028182298|       7786|
|2018|2.7323065115587184|       7413|
|2019|2.7394299000869617|       7129|
|2020| 2.689796460804766|       8487|
|2021|2.6918773938364264|      12324|
|2022| 2.608112987208775|      10025|
|2023| 2.547571481776546|       8896|
+----+------------------+-----------+

+---------------+-----------+------------------+
|  nearest_place|crime_count|  average_distance|
+---------------+-----------+------------------+
|    77TH STREET|      16567|2.6972210227302096|
|      SOUTHEAST|      12917|2.1027902716277644|
|         NEWTON|       9617|2.0146354569413396|
|      SOUTHWEST|       8641|2.6994199153215415|
|     HOLLENBECK|       6113|2.6491807867280794|
|         HARBOR|       5444| 4.083699413903692|
|        RAMPART|       4998| 1.578602693862518|
|        MISSION|       4463| 4.717500314362578|
|        OLYMPIC|       4336|1.8335794837217338|
|       FOOTHILL|       3943|3.8036985828653465|
|      NORTHEAST|       3848| 3.905631374560968|
|      HOLLYWOOD|       3560|1.4549117847587096|
|        CENTRAL|       3485|1.1352127099684712|
|       WILSHIRE|       3428| 2.320849636545945|
|NORTH HOLLYWOOD|       3394|2.7196218979017166|
|    WEST VALLEY|       2789| 3.525605238376691|
|       VAN NUYS|       2649|2.2148398439548065|
|        PACIFIC|       2646|3.7329758730437934|
|     DEVONSHIRE|       2602| 4.019167427465691|
|        TOPANGA|       2313|3.4792441420192515|
+---------------+-----------+------------------+
only showing top 20 rows

