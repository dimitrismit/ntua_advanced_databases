query3_df.py
simple
----------------------------------------------------------------------------------------------------
Spark session started for query3_df_MERGE !
----------------------------------------------------------------------------------------------------
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- SortMergeJoin [Zip Code#90], [cast(Zip Code#154 as int)], LeftSemi
   :- Sort [Zip Code#90 ASC NULLS FIRST], false, 0
   :  +- Exchange hashpartitioning(Zip Code#90, 200), ENSURE_REQUIREMENTS, [plan_id=79]
   :     +- Filter isnotnull(Zip Code#90)
   :        +- FileScan csv [Zip Code#90,Community#91,Estimated Median Income#92] Batched: false, DataFilters: [isnotnull(Zip Code#90)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://okeanos-master:54310/project_data/income/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Community:string,Estimated Median Income:string>
   +- Sort [cast(Zip Code#154 as int) ASC NULLS FIRST], false, 0
      +- Exchange hashpartitioning(cast(Zip Code#154 as int), 200), ENSURE_REQUIREMENTS, [plan_id=80]
         +- Project [regexp_extract(ZIPcode#115, ^(\d+), 1) AS Zip Code#154]
            +- Filter isnotnull(regexp_extract(ZIPcode#115, ^(\d+), 1))
               +- FileScan csv [ZIPcode#115] Batched: false, DataFilters: [isnotnull(regexp_extract(ZIPcode#115, ^(\d+), 1))], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://okeanos-master:54310/project_data/revgecoding.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<ZIPcode:string>


== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Project [Zip Code#154, LAT#113, LON#114]
   +- SortMergeJoin [cast(Zip Code#154 as int)], [Zip Code#90], LeftSemi
      :- Sort [cast(Zip Code#154 as int) ASC NULLS FIRST], false, 0
      :  +- Exchange hashpartitioning(cast(Zip Code#154 as int), 200), ENSURE_REQUIREMENTS, [plan_id=176]
      :     +- Project [LAT#113, LON#114, regexp_extract(ZIPcode#115, ^(\d+), 1) AS Zip Code#154]
      :        +- Filter isnotnull(regexp_extract(ZIPcode#115, ^(\d+), 1))
      :           +- FileScan csv [LAT#113,LON#114,ZIPcode#115] Batched: false, DataFilters: [isnotnull(regexp_extract(ZIPcode#115, ^(\d+), 1))], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://okeanos-master:54310/project_data/revgecoding.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>
      +- Sort [Zip Code#90 ASC NULLS FIRST], false, 0
         +- Exchange hashpartitioning(Zip Code#90, 200), ENSURE_REQUIREMENTS, [plan_id=177]
            +- Union
               :- TakeOrderedAndProject(limit=3, orderBy=[Estimated Median Income#92 DESC NULLS LAST], output=[Zip Code#90])
               :  +- SortMergeJoin [Zip Code#90], [cast(Zip Code#154 as int)], LeftSemi
               :     :- Sort [Zip Code#90 ASC NULLS FIRST], false, 0
               :     :  +- Exchange hashpartitioning(Zip Code#90, 200), ENSURE_REQUIREMENTS, [plan_id=160]
               :     :     +- Filter isnotnull(Zip Code#90)
               :     :        +- FileScan csv [Zip Code#90,Estimated Median Income#92] Batched: false, DataFilters: [isnotnull(Zip Code#90)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://okeanos-master:54310/project_data/income/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Estimated Median Income:string>
               :     +- Sort [cast(Zip Code#154 as int) ASC NULLS FIRST], false, 0
               :        +- Exchange hashpartitioning(cast(Zip Code#154 as int), 200), ENSURE_REQUIREMENTS, [plan_id=161]
               :           +- Project [regexp_extract(ZIPcode#175, ^(\d+), 1) AS Zip Code#154]
               :              +- Filter isnotnull(regexp_extract(ZIPcode#175, ^(\d+), 1))
               :                 +- FileScan csv [ZIPcode#175] Batched: false, DataFilters: [isnotnull(regexp_extract(ZIPcode#175, ^(\d+), 1))], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://okeanos-master:54310/project_data/revgecoding.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<ZIPcode:string>
               +- TakeOrderedAndProject(limit=3, orderBy=[Estimated Median Income#166 ASC NULLS FIRST], output=[Zip Code#164])
                  +- SortMergeJoin [Zip Code#164], [cast(Zip Code#154 as int)], LeftSemi
                     :- Sort [Zip Code#164 ASC NULLS FIRST], false, 0
                     :  +- Exchange hashpartitioning(Zip Code#164, 200), ENSURE_REQUIREMENTS, [plan_id=167]
                     :     +- Filter isnotnull(Zip Code#164)
                     :        +- FileScan csv [Zip Code#164,Estimated Median Income#166] Batched: false, DataFilters: [isnotnull(Zip Code#164)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://okeanos-master:54310/project_data/income/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Estimated Median Income:string>
                     +- Sort [cast(Zip Code#154 as int) ASC NULLS FIRST], false, 0
                        +- Exchange hashpartitioning(cast(Zip Code#154 as int), 200), ENSURE_REQUIREMENTS, [plan_id=168]
                           +- Project [regexp_extract(ZIPcode#169, ^(\d+), 1) AS Zip Code#154]
                              +- Filter isnotnull(regexp_extract(ZIPcode#169, ^(\d+), 1))
                                 +- FileScan csv [ZIPcode#169] Batched: false, DataFilters: [isnotnull(regexp_extract(ZIPcode#169, ^(\d+), 1))], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://okeanos-master:54310/project_data/revgecoding.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<ZIPcode:string>


== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Project [LAT#43, LON#44, DR_NO#17, Date Rptd#18, DATE OCC#120, TIME OCC#20, AREA#21, AREA NAME#22, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, ... 4 more fields]
   +- SortMergeJoin [knownfloatingpointnormalized(normalizenanandzero(LAT#43)), knownfloatingpointnormalized(normalizenanandzero(LON#44))], [knownfloatingpointnormalized(normalizenanandzero(LAT#113)), knownfloatingpointnormalized(normalizenanandzero(LON#114))], LeftSemi
      :- Sort [knownfloatingpointnormalized(normalizenanandzero(LAT#43)) ASC NULLS FIRST, knownfloatingpointnormalized(normalizenanandzero(LON#44)) ASC NULLS FIRST], false, 0
      :  +- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(LAT#43)), knownfloatingpointnormalized(normalizenanandzero(LON#44)), 200), ENSURE_REQUIREMENTS, [plan_id=300]
      :     +- Project [DR_NO#17, Date Rptd#18, gettimestamp(DATE OCC#19, MM/dd/yyyy hh:mm:ss a, TimestampType, Some(Europe/Athens), false) AS DATE OCC#120, TIME OCC#20, AREA#21, AREA NAME#22, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, ... 4 more fields]
      :        +- Filter (((isnotnull(Vict Descent#30) AND (year(cast(gettimestamp(DATE OCC#19, MM/dd/yyyy hh:mm:ss a, TimestampType, Some(Europe/Athens), false) as date)) = 2015)) AND isnotnull(LAT#43)) AND isnotnull(LON#44))
      :           +- FileScan csv [DR_NO#17,Date Rptd#18,DATE OCC#19,TIME OCC#20,AREA#21,AREA NAME#22,Rpt Dist No#23,Part 1-2#24,Crm Cd#25,Crm Cd Desc#26,Mocodes#27,Vict Age#28,Vict Sex#29,Vict Descent#30,Premis Cd#31,Premis Desc#32,Weapon Used Cd#33,Weapon Desc#34,Status#35,Status Desc#36,Crm Cd 1#37,Crm Cd 2#38,Crm Cd 3#39,Crm Cd 4#40,... 4 more fields] Batched: false, DataFilters: [isnotnull(Vict Descent#30), (year(cast(gettimestamp(DATE OCC#19, MM/dd/yyyy hh:mm:ss a, Timestam..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://okeanos-master:54310/project_data/Crime_Data_from_2010_to_Prese..., PartitionFilters: [], PushedFilters: [IsNotNull(Vict Descent), IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA:int,AREA NAME:string,Rpt Dist...
      +- Sort [knownfloatingpointnormalized(normalizenanandzero(LAT#113)) ASC NULLS FIRST, knownfloatingpointnormalized(normalizenanandzero(LON#114)) ASC NULLS FIRST], false, 0
         +- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(LAT#113)), knownfloatingpointnormalized(normalizenanandzero(LON#114)), 200), ENSURE_REQUIREMENTS, [plan_id=301]
            +- Project [LAT#113, LON#114]
               +- SortMergeJoin [cast(Zip Code#154 as int)], [Zip Code#90], LeftSemi
                  :- Sort [cast(Zip Code#154 as int) ASC NULLS FIRST], false, 0
                  :  +- Exchange hashpartitioning(cast(Zip Code#154 as int), 200), ENSURE_REQUIREMENTS, [plan_id=292]
                  :     +- Project [LAT#113, LON#114, regexp_extract(ZIPcode#115, ^(\d+), 1) AS Zip Code#154]
                  :        +- Filter ((isnotnull(regexp_extract(ZIPcode#115, ^(\d+), 1)) AND isnotnull(LAT#113)) AND isnotnull(LON#114))
                  :           +- FileScan csv [LAT#113,LON#114,ZIPcode#115] Batched: false, DataFilters: [isnotnull(regexp_extract(ZIPcode#115, ^(\d+), 1)), isnotnull(LAT#113), isnotnull(LON#114)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://okeanos-master:54310/project_data/revgecoding.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>
                  +- Sort [Zip Code#90 ASC NULLS FIRST], false, 0
                     +- Exchange hashpartitioning(Zip Code#90, 200), ENSURE_REQUIREMENTS, [plan_id=293]
                        +- Union
                           :- TakeOrderedAndProject(limit=3, orderBy=[Estimated Median Income#92 DESC NULLS LAST], output=[Zip Code#90])
                           :  +- SortMergeJoin [Zip Code#90], [cast(Zip Code#154 as int)], LeftSemi
                           :     :- Sort [Zip Code#90 ASC NULLS FIRST], false, 0
                           :     :  +- Exchange hashpartitioning(Zip Code#90, 200), ENSURE_REQUIREMENTS, [plan_id=276]
                           :     :     +- Filter isnotnull(Zip Code#90)
                           :     :        +- FileScan csv [Zip Code#90,Estimated Median Income#92] Batched: false, DataFilters: [isnotnull(Zip Code#90)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://okeanos-master:54310/project_data/income/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Estimated Median Income:string>
                           :     +- Sort [cast(Zip Code#154 as int) ASC NULLS FIRST], false, 0
                           :        +- Exchange hashpartitioning(cast(Zip Code#154 as int), 200), ENSURE_REQUIREMENTS, [plan_id=277]
                           :           +- Project [regexp_extract(ZIPcode#175, ^(\d+), 1) AS Zip Code#154]
                           :              +- Filter isnotnull(regexp_extract(ZIPcode#175, ^(\d+), 1))
                           :                 +- FileScan csv [ZIPcode#175] Batched: false, DataFilters: [isnotnull(regexp_extract(ZIPcode#175, ^(\d+), 1))], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://okeanos-master:54310/project_data/revgecoding.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<ZIPcode:string>
                           +- TakeOrderedAndProject(limit=3, orderBy=[Estimated Median Income#166 ASC NULLS FIRST], output=[Zip Code#164])
                              +- SortMergeJoin [Zip Code#164], [cast(Zip Code#154 as int)], LeftSemi
                                 :- Sort [Zip Code#164 ASC NULLS FIRST], false, 0
                                 :  +- Exchange hashpartitioning(Zip Code#164, 200), ENSURE_REQUIREMENTS, [plan_id=283]
                                 :     +- Filter isnotnull(Zip Code#164)
                                 :        +- FileScan csv [Zip Code#164,Estimated Median Income#166] Batched: false, DataFilters: [isnotnull(Zip Code#164)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://okeanos-master:54310/project_data/income/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Estimated Median Income:string>
                                 +- Sort [cast(Zip Code#154 as int) ASC NULLS FIRST], false, 0
                                    +- Exchange hashpartitioning(cast(Zip Code#154 as int), 200), ENSURE_REQUIREMENTS, [plan_id=284]
                                       +- Project [regexp_extract(ZIPcode#169, ^(\d+), 1) AS Zip Code#154]
                                          +- Filter isnotnull(regexp_extract(ZIPcode#169, ^(\d+), 1))
                                             +- FileScan csv [ZIPcode#169] Batched: false, DataFilters: [isnotnull(regexp_extract(ZIPcode#169, ^(\d+), 1))], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://okeanos-master:54310/project_data/revgecoding.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<ZIPcode:string>


+----------------------+------------+
|Vict Descent          |Victim Count|
+----------------------+------------+
|White                 |2219        |
|Other                 |543         |
|Hispanic/Latin/Mexican|418         |
|Unknown               |281         |
|Black                 |250         |
|Other Asian           |125         |
|Filipino              |3           |
|Japanese              |1           |
+----------------------+------------+

